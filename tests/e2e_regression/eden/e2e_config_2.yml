# Config for phase 2 of e2e regression tests. See e2e_config_1.yml for more info.

analysis:
  source:
    cache: { cache_dir: tests/e2e_regression/eden/rpc-cache }
    chain_name: mainnet
    nodes:
      eden: { default: { rpc: grpc.oasis.io:443 } }
    ipfs:
      gateway: https://ipfs.io
    fast_startup: true
  helpers:
    caching_proxies:
      - { target: "https://sourcify.dev/server", host_addr: "localhost:9191" }
  analyzers:
    consensus_accounts_list:       { interval: 5s, stop_if_queue_empty_for: 1s }
    evm_tokens_emerald:            { stop_if_queue_empty_for: 1s }
    evm_nfts_emerald:              { stop_if_queue_empty_for: 1s }
    evm_token_balances_emerald:    { stop_if_queue_empty_for: 1s }
    evm_contract_code_emerald:     { stop_if_queue_empty_for: 1s }
    evm_abi_emerald:               { stop_if_queue_empty_for: 10s } # Give evm_contract_verifier time to fetch ABIs first. The 10s has been enough in practice, but might need to be tuned in the future, especially if the caching proxy has an empty cache.
    evm_contract_verifier_emerald: { stop_if_queue_empty_for: 1s, sourcify_server_url: http://localhost:9191 }
    validator_staking_history:     { from: 16_817_956, stop_if_queue_empty_for: 1s, max_backoff_time: 6s }
    metadata_registry:             { interval: 5s, stop_if_queue_empty_for: 1s, repository_branch: "nexus-e2e", mock_logo_urls: true }
    # Some non-block analyzers are not tested in e2e regressions.
    # They are largely not worth the trouble as they do not interact with rest of the system much.
    # node_stats: {}        # Awkward to inject mock node response using the current paradigm (= response caching).
    # aggregate_stats: {}   # Awkward to make stop after a single run.
  storage:
    backend: postgres
    endpoint: postgresql://rwuser:password@localhost:5432/indexer?sslmode=disable
    # DANGER__WIPE_STORAGE_ON_STARTUP: true
    migrations: file://storage/migrations

log:
  level: info
  format: json

metrics:
  pull_endpoint: localhost:8009
