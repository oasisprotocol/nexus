# Config for phase 1 of 2 of e2e regression tests.
# See also ensure_consistent_config.sh
#
# Phase 1 runs all block-based analyzers; phase 2 runs all others. This is a slightly hacky
# but low-effort way to ensure that all non-block analyzers perform RPCs at a deterministic
# height and therefore always hit the RPC cache. (Most EVM-related analyzers make RPCs at the
# maximum height that's been reached by block analyzers by that point.)
#
# Keep most changes in sync with the edenfast_2025 suite.

analysis:
  source:
    cache: { cache_dir: tests/e2e_regression/eden_testnet_2025/rpc-cache }
    chain_name: testnet
    nodes:
      # Node will be accessed only when the filling up the cache.
      # In CI, the cache is expected to have all the node responses as the node is not reachable.
      "2023-10-12": { default: { rpc: internal-direct.testnet.grpc.opf.oasis.io:443 } } #testnet.grpc.opf.oasis.io:443 } }
    ipfs:
      gateway: https://ipfs.io
    fast_startup: true
  analyzers:
    consensus:
      from: 25_640_954  # March 11, 2025.
      to: 25_642_954    # ~2000 blocks; compromise between fast and comprehensive
    sapphire:
      from: 10_742_000  #  March 11, 2025. Some rofl apps were active in this period.
      to: 10_744_000    # ~2000 blocks; compromise between fast and comprehensive
  storage:
    backend: postgres
    endpoint: postgresql://rwuser:password@localhost:5432/indexer?sslmode=disable
    DANGER__WIPE_STORAGE_ON_STARTUP: true
    migrations: file://storage/migrations

server:
  source:
    chain_name: testnet
  endpoint: localhost:8008
  storage:
    endpoint: postgresql://api:password@localhost:5432/indexer?sslmode=disable
    backend: postgres

log:
  level: debug
  format: json

metrics:
  pull_endpoint: localhost:8009
