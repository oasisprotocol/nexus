openapi: 3.0.3
info:
  title: Oasis Indexer API V1
  description: An API for accessing indexed data from the Oasis Network.
  version: 0.1.0

servers:
  - url: http://index.oasis.dev/v1
    description: Mainnet index endpoint.
  - url: http://index.testnet.oasis.dev/v1
    description: Testnet index endpoint.

x-query-params:
  - &offset
    in: query
    name: offset
    schema:
      type: integer
    description: |
      The number of items to skip before starting to collect the result set.
  - &limit
    in: query
    name: limit
    schema:
      type: integer
    description: |
      The maximum numbers of items to return.
  - &height
    in: query
    name: height
    schema:
      type: integer
      format: int64
    description: |
      The block height from which to query state. The Oasis Indexer does not
      make any guarantees about availability of historical state data.

x-err-responses:
  base-error: &base-error-response
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ApiError'
  common-errors: &common-error-responses
    '400':
      description: Invalid request.
      <<: *base-error-response
    '404':
      description: No results found.
      <<: *base-error-response
    '500':
      description: A server error occurred.
      <<: *base-error-response

x-examples:
  chain-id:
    - &chain_id_1 'oasis-3'
  block-height:
    - &block_height_1 8048956
    - &block_height_2 8049555
  block-hash:
    - &block_hash_1 '0a29ac21fa69bb9e43e5cb25d10826ff3946f1ce977e82f99a2614206a50765c'
  tx-hash:
    - &tx_hash_1 '0d0531d6b8a468c07440182b1cdda517f5a076d69fb2199126a83082ecfc0f41'
  tx-method:
    - &tx_method_1 'staking.Transfer'
  tx-body:
    - &tx_body_1 '{"amount":"1000000000","account":"oasis1qpg2xuz46g53737343r20yxeddhlvc2ldqsjh70p"}'
  epoch:
    - &epoch_1 8048956
    - &epoch_2 8048966
  entity-id:
    - &entity_id_1 'gb8SHLeDc69Elk7OTfqhtVgE2sqxrBCDQI84xKR+Bjg='
  node-id:
    - &node_id_1 'lbxs4hlud9XNloIOdhJPaCahd7HtiY8QATCgGnFfCM0='
  staking-address:
    - &staking_address_1 'oasis1qpg2xuz46g53737343r20yxeddhlvc2ldqsjh70p'
    - &staking_address_2 'oasis1qprtzrg97jk0wxnqkhxwyzy5qys47r7alvfl3fcg'
  proposal-id:
    - &proposal_id_1 1
  iso-timestamp:
    - &iso_timestamp_1 '2022-03-01T00:00:00Z'
    - &iso_timestamp_2 '2019-04-01T00:00:00Z'

x-common-types:
  tx-methods: &tx_methods
    - staking.Transfer
    - staking.AddEscrow
    - staking.ReclaimEscrow
    - staking.AmendCommissionSchedule
    - staking.Allow
    - staking.Withdraw
    - roothash.ExecutorCommit
    - roothash.ExecutorProposerTimeout
    - registry.RegisterEntity
    - registry.RegisterNode
    - registry.RegisterRuntime
    - governance.CastVote
    - governance.SubmitProposal
    - beacon.PVSSCommit
    - beacon.PVSSReveal
    - beacon.VRFProve

paths:
  /status:
    get:
      summary: Returns the indexer status.
      responses:
        '200':
          description: A JSON object containing status metadata.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Status'
        <<: *common-error-responses

  /consensus/blocks:
    get:
      summary: Returns a list of consensus blocks.
      parameters:
        - *limit
        - *offset
        - in: query
          name: from
          schema:
            type: integer
            format: int64
          description: A filter on minimum block height.
          example: *block_height_1
        - in: query
          name: to
          schema:
            type: integer
            format: int64
          description: A filter on maximum block height.
          example: *block_height_2
        - in: query
          name: after
          schema:
            type: string
            format: date-time
          description: A filter on minimum block time.
          example: *iso_timestamp_1
        - in: query
          name: before
          schema:
            type: string
            format: date-time
          description: A filter on maximum block time.
          example: *iso_timestamp_2
      responses:
        '200':
          description: A JSON object containing a list of consensus blocks.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/BlockList'
        <<: *common-error-responses

  /consensus/blocks/{height}:
    get:
      summary: Returns a consensus block.
      parameters:
        - in: path
          name: height
          required: true
          schema:
            type: integer
            format: int64
          description: The block height of the block to return.
          example: *block_height_1
      responses:
        '200':
          description: A JSON object containing a consensus block.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Block'
        <<: *common-error-responses

  /consensus/transactions:
    get:
      summary: Returns a list of consensus transactions.
      parameters:
        - *limit
        - *offset
        - in: query
          name: block
          schema:
            type: integer
            format: int64
          description: A filter on block height.
          example: *block_height_1
        - in: query
          name: method
          schema:
            type: string
            enum: *tx_methods
          description: A filter on transaction method.
          example: *tx_method_1
        - in: query
          name: sender
          schema:
            type: string
          description: A filter on transaction sender.
          example: *staking_address_1
        - in: query
          name: minFee
          schema:
            type: integer
            format: int64
          description: A filter on minimum transaction fee.
          example: 1000
        - in: query
          name: maxFee
          schema:
            type: integer
            format: int64
          description: A filter on maximum transaction fee.
          example: 10000
        - in: query
          name: code
          schema:
            type: integer
          description: A filter on transaction status code.
      responses:
        '200':
          description: |
            A JSON object containing a list of consensus transactions.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/TransactionList'
        <<: *common-error-responses

  /consensus/transactions/{tx_hash}:
    get:
      summary: Returns a consensus transaction.
      parameters:
        - in: path
          name: tx_hash
          required: true
          schema:
            type: string
          description: The transaction hash of the transaction to return.
          example: *tx_hash_1
      responses:
        '200':
          description: A JSON object containing a consensus transaction.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Transaction'
        <<: *common-error-responses

  /consensus/entities:
    get:
      summary: Returns a list of entities registered at the consensus layer.
      parameters:
        - *limit
        - *offset
        - *height
      responses:
        '200':
          description: |
            A JSON object containing a list of entities registered
            at the consensus layer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityList'
        <<: *common-error-responses

  /consensus/entities/{entity_id}:
    get:
      summary: Returns an entity registered at the consensus layer.
      parameters:
        - *height
        - in: path
          name: entity_id
          required: true
          schema:
            type: string
          description: The entity ID of the entity to return.
          example: *entity_id_1
      responses:
        '200':
          description: |
            A JSON object containing an entity registered
            at the consensus layer.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Entity'
        <<: *common-error-responses

  /consensus/entities/{entity_id}/nodes:
    get:
      summary: Returns a list of nodes registered at the consensus layer.
      parameters:
        - *limit
        - *offset
        - *height
        - in: path
          name: entity_id
          required: true
          schema:
            type: string
          description: |
            The entity ID of the controlling entity of the nodes to return.
          example: *entity_id_1
      responses:
        '200':
          description: |
            A JSON object containing a list of nodes registered at the consensus layer.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/NodeList'
        <<: *common-error-responses

  /consensus/entities/{entity_id}/nodes/{node_id}:
    get:
      summary: Returns a node registered at the consensus layer.
      parameters:
        - *height
        - in: path
          name: entity_id
          required: true
          schema:
            type: string
          description: |
            The entity ID of the entity controlling the node to return.
          example: *entity_id_1
        - in: path
          name: node_id
          required: true
          schema:
            type: string
          description: The node ID of the node to return.
          example: *node_id_1
      responses:
        '200':
          description: |
            A JSON object containing a node registered at the consensus layer.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Node'
        <<: *common-error-responses

  /consensus/accounts:
    get:
      summary: Returns a list of consensus layer accounts.
      parameters:
        - *limit
        - *offset
        - *height
        - in: query
          name: minAvailable
          schema:
            type: integer
            format: int64
          description: A filter on the minimum available account balance.
          example: 10000000000
        - in: query
          name: maxAvailable
          schema:
            type: integer
            format: int64
          description: A filter on the maximum available account balance.
          example: 100000000000
        - in: query
          name: minEscrow
          schema:
            type: integer
            format: int64
          description: A filter on the minimum active escrow account balance.
          example: 10000000000
        - in: query
          name: maxEscrow
          schema:
            type: integer
            format: int64
          description: A filter on the maximum active escrow account balance.
          example: 100000000000
        - in: query
          name: minDebonding
          schema:
            type: integer
            format: int64
          description: A filter on the minimum debonding account balance.
          example: 10000000000
        - in: query
          name: maxDebonding
          schema:
            type: integer
            format: int64
          description: A filter on the maximum debonding account balance.
          example: 100000000000
        - in: query
          name: minTotalBalance
          schema:
            type: integer
            format: int64
          description: A filter on the minimum total account balance.
          example: 10000000000
        - in: query
          name: maxTotalBalance
          schema:
            type: integer
            format: int64
          description: A filter on the maximum total account balance.
          example: 100000000000
      responses:
        '200':
          description: |
            A JSON object containing a list of consensus layer accounts.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AccountList'
        <<: *common-error-responses

  /consensus/accounts/{address}:
    get:
      summary: Returns a consensus layer account.
      parameters:
        - *height
        - in: path
          name: address
          required: true
          schema:
            type: string
          description: The staking address of the account to return.
          example: *staking_address_1
      responses:
        '200':
          description: A JSON object containing a consensus layer account.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Account'
        <<: *common-error-responses

  /consensus/epochs:
    get:
      summary: Returns a list of consensus epochs.
      parameters:
        - *limit
        - *offset
      responses:
        '200':
          description: A JSON object containing a list of consensus epochs.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/EpochList'
        <<: *common-error-responses

  /consensus/epochs/{epoch}:
    get:
      summary: Returns a consensus epoch.
      parameters:
        - in: path
          name: epoch
          required: true
          schema:
            type: integer
            format: int64
          description: The epoch number of the epoch to return.
          example: *epoch_1
      responses:
        '200':
          description: A JSON object containing a consensus epoch.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Epoch'
        <<: *common-error-responses

  /consensus/proposals:
    get:
      summary: Returns a list of governance proposals.
      parameters:
        - *limit
        - *offset
      responses:
        '200':
          description: A JSON object containing a list of governance proposals.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProposalList'
        <<: *common-error-responses

  /consensus/proposals/{proposal_id}:
    get:
      summary: Returns a governance proposal.
      parameters:
        - in: path
          name: proposal_id
          required: true
          schema:
            type: integer
            format: int64
          description: The unique identifier of the proposal to return.
          example: *proposal_id_1
      responses:
        '200':
          description: A JSON object containing a governance proposal.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Proposal'
        <<: *common-error-responses

  /consensus/proposals/{proposal_id}/votes:
    get:
      summary: Returns a list of votes for a governance proposal.
      parameters:
        - *limit
        - *offset
        - in: path
          name: proposal_id
          required: true
          schema:
            type: integer
            format: int64
          description: |
            The unique identifier of the proposal for which votes are returned.
          example: *proposal_id_1
      responses:
        '200':
          description: |
            A JSON object containing a list of votes for a governance proposal.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProposalVotes'
        <<: *common-error-responses

components:
  schemas:
    ApiError:
      type: object
      properties:
        msg:
          type: string
          description: An error message.
          example: 'internal storage error'

    Status:
      type: object
      properties:
        latest_chain_id:
          type: string
          description: The latest chain ID at the head of indexing.
          example: *chain_id_1
        latest_block:
          type: integer
          format: int64
          description: The latest indexed block at the head of indexing.
          example: *block_height_1
        latest_update:
          type: string
          format: date-time
          description: The RFC 3339 formatted time of latest indexing update.
          example: *iso_timestamp_1

    BlockList:
      type: object
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/Block'
      description: |
        A list of consensus blocks.

    Block:
      type: object
      properties: 
        height:
          type: integer
          format: int64
          description: The block height.
          example: *block_height_1
        hash:
          type: string
          description: The block header hash.
          example: *block_hash_1
        timestamp:
          type: string
          format: date-time
          description: The second-granular consensus time.
          example: *iso_timestamp_1
      description: |
        A consensus block.

    TransactionList:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
      description: |
        A list of consensus transactions.
    
    Transaction:
      type: object
      properties: 
        height:
          type: integer
          format: int64
          description: The block height at which this transaction was executed.
          example: *block_height_1
        hash:
          type: string
          description: The cryptographic hash of this transaction's encoding.
          example: *tx_hash_1
        nonce:
          type: integer
          format: int64
          description: The nonce used with this transaction, to prevent replay.
          example: 0
        fee:
          type: integer
          format: int64
          description: |
            The fee that this transaction's sendeer committed
            to pay to execute it.
          example: 1000
        method:
          type: string
          enum: *tx_methods
          description: The method that was called.
          example: *tx_method_1
        body:
          type: string
          description: The method call body.
          example: *tx_body_1
        success:
          type: boolean
          description: Whether this transaction successfully executed.
      description: |
        A consensus transaction.
    
    EntityList:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
      description: |
        A list of entities registered at the consensus layer.
    
    Entity:
      type: object
      properties: 
        id:
          type: string
          description: The public key identifying this entity.
          example: *entity_id_1
        nodes:
          type: array
          items:
            type: string
          description: The vector of nodes owned by this entity.
      description: |
        An entity registered at the consensus layer.
    
    NodeList:
      type: object
      properties:
        entity_id:
          type: string
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/Node'
      description: |
        A list of nodes registered at the consensus layer.
    
    Node:
      type: object
      properties: 
        id:
          type: string
          description: The public key identifying this node.
          example: *node_id_1
        entity_id:
          type: string
          description: |
            The public key identifying the entity controlling this node.
          example: *entity_id_1
        expiration:
          type: integer
          format: int64
          description: The epoch in which this node's commitment expires.
        tls_pubkey:
          type: string
          description: The public key used for establishing TLS connections.
        tls_next_pubkey:
          type: string
          description: |
            The public key that will be used for establishing TLS connections
            upon rotation.
        p2p_pubkey:
          type: string
          description: The unique identifier of this node on the P2P transport.
        consensus_pubkey:
          type: string
          description: The unique identifier of this node as a consensus member
        roles:
          type: string
          description: A bitmask representing this node's roles.
      description: |
        A node registered at the consensus layer.

    AccountList:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      description: |
        A list of consensus layer accounts.
    
    Account:
      type: object
      properties: 
        address:
          type: string
          description: The staking address for this account.
          example: *staking_address_1
        nonce:
          type: integer
          format: int64
          description: A nonce used to prevent replay.
          example: 0
        available:
          type: integer
          format: int64
          description: The available balance, in base units.
          example: 10000000000
        escrow:
          type: integer
          format: int64
          description: The active escrow balance, in base units.
          example: 10000000000
        debonding:
          type: integer
          format: int64
          description: The debonding escrow balance, in base units.
          example: 10000000000
        total:
          type: integer
          format: int64
          description: The total (available+escrow) balance, in base units.
          example: 3000000000
        allowances:
          type: array
          items:
            $ref: '#/components/schemas/Allowance'
          description: The allowances made by this account.
      description: |
        A consensus layer account.
    
    Allowance:
      type: object
      properties:
        address:
          type: string
          description: The allowed account.
          example: *staking_address_2
        amount:
          type: integer
          format: int64
          description: The amount allowed for the allowed account.
          example: 10000000000
    
    EpochList:
      type: object
      properties:
        epochs:
          type: array
          items:
            $ref: '#/components/schemas/Epoch'
      description: |
        A list of consensus epochs.
    
    Epoch:
      type: object
      properties: 
        id:
          type: integer
          format: int64
          description: The epoch number.
          example: *epoch_1
        start_height:
          type: integer
          format: int64
          description: The (inclusive) height at which this epoch started.
          example: *block_height_1
        end_height:
          type: integer
          format: int64
          description: The (inclusive) height at which this epoch ended.
          example: *block_height_2
      description: |
        A consensus epoch.
    
    ProposalList:
      type: object
      properties:
        proposals:
          type: array
          items:
            $ref: '#/components/schemas/Proposal'
      description: |
        A list of governance proposals.
    
    Proposal:
      type: object
      properties: 
        id:
          type: integer
          format: int64
          description: The unique identifier of the proposal.
          example: *proposal_id_1
        submitter:
          type: string
          description: The staking address of the proposal submitter.
          example: *staking_address_1
        state:
          type: string
          description: The state of the proposal.
          example: 'active'
        deposit:
          type: integer
          format: int64
          description: The deposit attached to this proposal.
          example: 10000000000
        handler:
          type: string
          description: The name of the upgrade handler.
        target:
          type: object
          properties:
            consensus_protocol:
              type: string
            runtime_host_protocol:
              type: string
            runtime_committee_protocol:
              type: string
          description: The target propotocol versions for this upgrade proposal.
        epoch:
          type: integer
          format: int64
          description: The epoch at which the proposed upgrade will happen.
          example: *epoch_1
        cancels:
          type: integer
          format: int64
          description: |
            The proposal to cancel, if this proposal proposes
            cancelling an existing proposal. 
        created_at:
          type: integer
          format: int64
          description: The epoch at which this proposal was created.
          example: *epoch_1
        closes_at:
          type: integer
          format: int64
          description: The epoch at which voting for this proposal will close.
          example: *epoch_2
        invalid_votes:
          type: integer
          format: int64
          description: |
            The number of invalid votes for this proposal, after tallying.
      description: |
        A governance proposal.

    ProposalVotes:
      type: object
      properties:
        proposal_id:
          type: integer
          format: int64
          description: The unique identifier of the proposal.
        votes:
          type: array
          items:
            $ref: '#/components/schemas/ProposalVote'
          description: The list of votes for the proposal.
      description: |
        A list of votes for a governance proposal.

    ProposalVote:
      type: object
      properties: 
        address:
          type: string
          description: The staking address casting this vote.
          example: *staking_address_1
        vote:
          type: string
          description: The vote cast.
          example: 'yes'
