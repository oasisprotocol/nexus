# NOTE: This name appears in GitHub's Checks API and in workflow's status badge.
name: ci-lint

# Trigger the workflow when:
on:
  # A push occurs to one of the matched branches.
  push:
    branches:
      - main
    paths-ignore: # Do not trigger if _only_ these files were changed.
      - .punch_version.py
      - .changelog/*.md
      - CHANGELOG.md
  # Or when a pull request event occurs for a pull request against one of the
  # matched branches.
  pull_request:
    branches:
      - main
    paths-ignore: # Do not trigger if _only_ these files were changed.
      - .punch_version.py
      - .changelog/*.md
      - CHANGELOG.md

# Cancel in-progress jobs on same branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-go:
    name: lint-go
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history so gitlint can check the relevant commits.
          fetch-depth: '0'
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
        # Needed for Towncrier fork to work with 3.12 and above
      - name: Install gitlint
        run: |
          python -m pip install gitlint
      - name: Install setuptools
        run: |
          python -m pip install setuptools
      - name: Install towncrier
        run: |
          python -m pip install https://github.com/oasisprotocol/towncrier/archive/oasis-master.tar.gz
      - name: Check for presence of a Change Log fragment (only pull requests)
        # NOTE: The pull request' base branch needs to be fetched so towncrier
        # is able to compare the current branch with the base branch.
        # Source: https://github.com/actions/checkout/#fetch-all-branches.
        run: |
          git fetch --no-tags origin +refs/heads/${BASE_BRANCH}:refs/remotes/origin/${BASE_BRANCH}
          towncrier check --compare-with origin/${BASE_BRANCH}
        env:
          BASE_BRANCH: ${{ github.base_ref }}
        if: |
          github.event_name == 'pull_request' &&
          github.actor != 'dependabot[bot]'
      - name: Lint git commits
        run: |
          make lint-git
        # Always run this step so that all linting errors can be seen at once, but skip for dependabot
        if: always() && github.actor != 'dependabot[bot]'
      - name: Lint documentation
        run: |
          make lint-docs
        # Always run this step so that all linting errors can be seen at once.
        if: always()
      - name: Lint Change Log fragments
        run: |
          make lint-changelog
        # Always run this step so that all linting errors can be seen at once.
        if: always()
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"
        # Always run this step so that all linting errors can be seen at once.
        if: always()
      - name: Autogenerate Go code
        run: |
          go version
          go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@v2.4.1
          make codegen-go
        # Always run this step so that all linting errors can be seen at once.
        if: always()
      - name: Lint Go
        uses: golangci/golangci-lint-action@v8
        with:
          # Update README.md instructions when bumping this.
          version: v2.2.1
        # Always run this step so that all linting errors can be seen at once.
        if: always()
